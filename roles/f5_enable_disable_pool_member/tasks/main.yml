---
# tasks file for roles/f5_disable_pool_member

#  - name: Query BIG-IP facts
#    bigip_device_facts:
#      provider: "{{provider}}"
#      gather_subset:
#       - all 
#    register: all_bigip_facts

#  - name: Display all facts  
#    debug: "msg={{all_bigip_facts}}" 

  - name: Query BIG-IP facts
    bigip_device_facts:
      provider: "{{provider}}"
      gather_subset:
       - ltm-pools
    register: bigip_facts

  - name: Display ltm-pools
    debug: "msg={{bigip_facts}}"

  - name: Display Pools available
    debug: "msg={{item.name}}"
    loop: "{{bigip_facts.ltm_pools}}"
    loop_control:
      label: "{{item.name}}"

  - name: Store pool name in a variable
    set_fact:
     pool_name: "{{item.name}}"
    loop: "{{bigip_facts.ltm_pools}}"
    no_log: true

  - name: "Show members belonging to pool {{pool_name}}"
    debug: "msg={{item}}"
    loop: "{{bigip_facts.ltm_pools | json_query(query_string)}}"
    vars:
     query_string: "[?name=='{{pool_name}}'].members[*].name[]"


  - name: Disable ALL pool members
    bigip_pool_member:
      provider: "{{provider}}"
      state: "forced_offline"
      name: "{{item.split(':')[0]}}"
      pool: "{{pool_name}}"
      port: "{{item.split(':')[1]}}"
      host: "{{hostvars[item.split(':')[0]].ansible_host}}"
    when: 1 == 1 ##"[?name=='{{pool_name}}'].members[*].state" == "up"  
    loop: "{{bigip_facts.ltm_pools | json_query(query_string)}}"
    vars:
     query_string: "[?name=='{{pool_name}}'].members[*].name[]"

